"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listSpacecraftAvailableContactsOutput = exports.listSpacecraftAvailableContacts = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Returns list of available contacts. A contact is available if the spacecraft is visible from the ground station for more than the minimum viable contact duration provided in the contact profile.
 * Azure REST API version: 2022-11-01.
 *
 * Other available API versions: 2022-03-01.
 */
function listSpacecraftAvailableContacts(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:orbital:listSpacecraftAvailableContacts", {
        "contactProfile": args.contactProfile,
        "endTime": args.endTime,
        "groundStationName": args.groundStationName,
        "resourceGroupName": args.resourceGroupName,
        "spacecraftName": args.spacecraftName,
        "startTime": args.startTime,
    }, opts);
}
exports.listSpacecraftAvailableContacts = listSpacecraftAvailableContacts;
/**
 * Returns list of available contacts. A contact is available if the spacecraft is visible from the ground station for more than the minimum viable contact duration provided in the contact profile.
 * Azure REST API version: 2022-11-01.
 *
 * Other available API versions: 2022-03-01.
 */
function listSpacecraftAvailableContactsOutput(args, opts) {
    return pulumi.output(args).apply((a) => listSpacecraftAvailableContacts(a, opts));
}
exports.listSpacecraftAvailableContactsOutput = listSpacecraftAvailableContactsOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdFNwYWNlY3JhZnRBdmFpbGFibGVDb250YWN0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL29yYml0YWwvbGlzdFNwYWNlY3JhZnRBdmFpbGFibGVDb250YWN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6QywwQ0FBMEM7QUFFMUM7Ozs7O0dBS0c7QUFDSCxTQUFnQiwrQkFBK0IsQ0FBQyxJQUF5QyxFQUFFLElBQTJCO0lBRWxILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLHNEQUFzRCxFQUFFO1FBQ2pGLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjO1FBQ3JDLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTztRQUN2QixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWM7UUFDckMsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO0tBQzlCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBWEQsMEVBV0M7QUEwQ0Q7Ozs7O0dBS0c7QUFDSCxTQUFnQixxQ0FBcUMsQ0FBQyxJQUErQyxFQUFFLElBQTJCO0lBQzlILE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLCtCQUErQixDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQzFGLENBQUM7QUFGRCxzRkFFQyJ9
"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listConnectedClusterUserCredentialOutput = exports.listConnectedClusterUserCredential = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets cluster user credentials of the connected cluster with a specified resource group and name.
 * Azure REST API version: 2022-05-01-preview.
 *
 * Other available API versions: 2022-10-01-preview, 2023-11-01-preview, 2024-01-01, 2024-02-01-preview.
 */
function listConnectedClusterUserCredential(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:kubernetes:listConnectedClusterUserCredential", {
        "authenticationMethod": args.authenticationMethod,
        "clientProxy": args.clientProxy,
        "clusterName": args.clusterName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.listConnectedClusterUserCredential = listConnectedClusterUserCredential;
/**
 * Gets cluster user credentials of the connected cluster with a specified resource group and name.
 * Azure REST API version: 2022-05-01-preview.
 *
 * Other available API versions: 2022-10-01-preview, 2023-11-01-preview, 2024-01-01, 2024-02-01-preview.
 */
function listConnectedClusterUserCredentialOutput(args, opts) {
    return pulumi.output(args).apply((a) => listConnectedClusterUserCredential(a, opts));
}
exports.listConnectedClusterUserCredentialOutput = listConnectedClusterUserCredentialOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdENvbm5lY3RlZENsdXN0ZXJVc2VyQ3JlZGVudGlhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2t1YmVybmV0ZXMvbGlzdENvbm5lY3RlZENsdXN0ZXJVc2VyQ3JlZGVudGlhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6QywwQ0FBMEM7QUFFMUM7Ozs7O0dBS0c7QUFDSCxTQUFnQixrQ0FBa0MsQ0FBQyxJQUE0QyxFQUFFLElBQTJCO0lBRXhILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDREQUE0RCxFQUFFO1FBQ3ZGLHNCQUFzQixFQUFFLElBQUksQ0FBQyxvQkFBb0I7UUFDakQsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBVEQsZ0ZBU0M7QUFrQ0Q7Ozs7O0dBS0c7QUFDSCxTQUFnQix3Q0FBd0MsQ0FBQyxJQUFrRCxFQUFFLElBQTJCO0lBQ3BJLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLGtDQUFrQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQzdGLENBQUM7QUFGRCw0RkFFQyJ9
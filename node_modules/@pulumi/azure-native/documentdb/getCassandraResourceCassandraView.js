"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCassandraResourceCassandraViewOutput = exports.getCassandraResourceCassandraView = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets the Cassandra view under an existing Azure Cosmos DB database account.
 * Azure REST API version: 2023-03-15-preview.
 *
 * Other available API versions: 2023-09-15-preview, 2023-11-15-preview, 2024-02-15-preview.
 */
function getCassandraResourceCassandraView(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:documentdb:getCassandraResourceCassandraView", {
        "accountName": args.accountName,
        "keyspaceName": args.keyspaceName,
        "resourceGroupName": args.resourceGroupName,
        "viewName": args.viewName,
    }, opts);
}
exports.getCassandraResourceCassandraView = getCassandraResourceCassandraView;
/**
 * Gets the Cassandra view under an existing Azure Cosmos DB database account.
 * Azure REST API version: 2023-03-15-preview.
 *
 * Other available API versions: 2023-09-15-preview, 2023-11-15-preview, 2024-02-15-preview.
 */
function getCassandraResourceCassandraViewOutput(args, opts) {
    return pulumi.output(args).apply((a) => getCassandraResourceCassandraView(a, opts));
}
exports.getCassandraResourceCassandraViewOutput = getCassandraResourceCassandraViewOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2Fzc2FuZHJhUmVzb3VyY2VDYXNzYW5kcmFWaWV3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vZG9jdW1lbnRkYi9nZXRDYXNzYW5kcmFSZXNvdXJjZUNhc3NhbmRyYVZpZXcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsMENBQTBDO0FBRTFDOzs7OztHQUtHO0FBQ0gsU0FBZ0IsaUNBQWlDLENBQUMsSUFBMkMsRUFBRSxJQUEyQjtJQUV0SCxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQywyREFBMkQsRUFBRTtRQUN0RixhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZO1FBQ2pDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRO0tBQzVCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBVEQsOEVBU0M7QUFvREQ7Ozs7O0dBS0c7QUFDSCxTQUFnQix1Q0FBdUMsQ0FBQyxJQUFpRCxFQUFFLElBQTJCO0lBQ2xJLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLGlDQUFpQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQzVGLENBQUM7QUFGRCwwRkFFQyJ9
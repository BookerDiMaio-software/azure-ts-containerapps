"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCassandraResourceCassandraTableOutput = exports.getCassandraResourceCassandraTable = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets the Cassandra table under an existing Azure Cosmos DB database account.
 * Azure REST API version: 2023-04-15.
 *
 * Other available API versions: 2019-08-01, 2023-03-15-preview, 2023-09-15, 2023-09-15-preview, 2023-11-15, 2023-11-15-preview, 2024-02-15-preview.
 */
function getCassandraResourceCassandraTable(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:documentdb:getCassandraResourceCassandraTable", {
        "accountName": args.accountName,
        "keyspaceName": args.keyspaceName,
        "resourceGroupName": args.resourceGroupName,
        "tableName": args.tableName,
    }, opts);
}
exports.getCassandraResourceCassandraTable = getCassandraResourceCassandraTable;
/**
 * Gets the Cassandra table under an existing Azure Cosmos DB database account.
 * Azure REST API version: 2023-04-15.
 *
 * Other available API versions: 2019-08-01, 2023-03-15-preview, 2023-09-15, 2023-09-15-preview, 2023-11-15, 2023-11-15-preview, 2024-02-15-preview.
 */
function getCassandraResourceCassandraTableOutput(args, opts) {
    return pulumi.output(args).apply((a) => getCassandraResourceCassandraTable(a, opts));
}
exports.getCassandraResourceCassandraTableOutput = getCassandraResourceCassandraTableOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2Fzc2FuZHJhUmVzb3VyY2VDYXNzYW5kcmFUYWJsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2RvY3VtZW50ZGIvZ2V0Q2Fzc2FuZHJhUmVzb3VyY2VDYXNzYW5kcmFUYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6QywwQ0FBMEM7QUFFMUM7Ozs7O0dBS0c7QUFDSCxTQUFnQixrQ0FBa0MsQ0FBQyxJQUE0QyxFQUFFLElBQTJCO0lBRXhILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDREQUE0RCxFQUFFO1FBQ3ZGLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQixjQUFjLEVBQUUsSUFBSSxDQUFDLFlBQVk7UUFDakMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7S0FDOUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFURCxnRkFTQztBQWdERDs7Ozs7R0FLRztBQUNILFNBQWdCLHdDQUF3QyxDQUFDLElBQWtELEVBQUUsSUFBMkI7SUFDcEksT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQU0sRUFBRSxFQUFFLENBQUMsa0NBQWtDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUE7QUFDN0YsQ0FBQztBQUZELDRGQUVDIn0=
"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStorageAccountOutput = exports.getStorageAccount = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 * Azure REST API version: 2022-09-01.
 *
 * Other available API versions: 2015-05-01-preview, 2015-06-15, 2018-11-01, 2023-01-01, 2023-04-01.
 */
function getStorageAccount(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:storage:getStorageAccount", {
        "accountName": args.accountName,
        "expand": args.expand,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getStorageAccount = getStorageAccount;
/**
 * Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 * Azure REST API version: 2022-09-01.
 *
 * Other available API versions: 2015-05-01-preview, 2015-06-15, 2018-11-01, 2023-01-01, 2023-04-01.
 */
function getStorageAccountOutput(args, opts) {
    return pulumi.output(args).apply((a) => getStorageAccount(a, opts));
}
exports.getStorageAccountOutput = getStorageAccountOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0U3RvcmFnZUFjY291bnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zdG9yYWdlL2dldFN0b3JhZ2VBY2NvdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7Ozs7R0FLRztBQUNILFNBQWdCLGlCQUFpQixDQUFDLElBQTJCLEVBQUUsSUFBMkI7SUFFdEYsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsd0NBQXdDLEVBQUU7UUFDbkUsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTTtRQUNyQixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUkQsOENBUUM7QUFrTkQ7Ozs7O0dBS0c7QUFDSCxTQUFnQix1QkFBdUIsQ0FBQyxJQUFpQyxFQUFFLElBQTJCO0lBQ2xHLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLGlCQUFpQixDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQzVFLENBQUM7QUFGRCwwREFFQyJ9
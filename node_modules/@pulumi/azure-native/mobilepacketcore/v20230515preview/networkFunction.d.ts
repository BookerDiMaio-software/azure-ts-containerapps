import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * AO5GC Network Function Resource
 */
export declare class NetworkFunction extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFunction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkFunction;
    /**
     * Returns true if the given object is an instance of NetworkFunction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkFunction;
    /**
     * Capacity of the network function in units of 10000.  This represents the session count or the Simultaneously Attached Users (SAU) count as applicable
     */
    readonly capacity: pulumi.Output<number | undefined>;
    /**
     * User provided deployment notes.  This is used to optionally provide details about the NF deployment
     */
    readonly deploymentNotes: pulumi.Output<string | undefined>;
    /**
     * Count of infrastructure elements used by this network function (vCPUs, in units of 8)
     */
    readonly infrastructureElementCount: pulumi.Output<number>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Administrative state of the network function
     */
    readonly networkFunctionAdministrativeState: pulumi.Output<string>;
    /**
     * Operational state of the network function
     */
    readonly networkFunctionOperationalStatus: pulumi.Output<string>;
    /**
     * Type of network function
     */
    readonly networkFunctionType: pulumi.Output<string>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Provisioned SKU Value.
     */
    readonly sku: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.mobilepacketcore.v20230515preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * User provided description
     */
    readonly userDescription: pulumi.Output<string | undefined>;
    /**
     * Create a NetworkFunction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkFunctionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkFunction resource.
 */
export interface NetworkFunctionArgs {
    /**
     * Capacity of the network function in units of 10000.  This represents the session count or the Simultaneously Attached Users (SAU) count as applicable
     */
    capacity?: pulumi.Input<number>;
    /**
     * User provided deployment notes.  This is used to optionally provide details about the NF deployment
     */
    deploymentNotes?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Administrative state of the network function
     */
    networkFunctionAdministrativeState: pulumi.Input<string | enums.mobilepacketcore.v20230515preview.NetworkFunctionAdministrativeState>;
    /**
     * The name of the network function
     */
    networkFunctionName?: pulumi.Input<string>;
    /**
     * Type of network function
     */
    networkFunctionType: pulumi.Input<string | enums.mobilepacketcore.v20230515preview.NetworkFunctionType>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Provisioned SKU Value.
     */
    sku: pulumi.Input<string | enums.mobilepacketcore.v20230515preview.SkuDefinitions>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * User provided description
     */
    userDescription?: pulumi.Input<string>;
}
